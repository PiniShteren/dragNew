{"version":3,"sources":["redux/state.js","redux/reducers.js","redux/index.js","Drag.js","Main.js","App.js"],"names":["combineReducers","state","items","name","action","type","newItems","filter","e","i","index","item","splice","newIndex","Dimensions","get","width","height","Dragged","renderItem","setNewIndex","setIndex","zIndex","indexFlag","pan","useRef","Animated","ValueXY","current","responder","PanResponder","create","onMoveShouldSetPanResponder","onPanResponderGrant","setOffset","y","_value","onPanResponderMove","event","dy","useNativeDriver","onPanResponderRelease","yNew","length","move","Math","round","useEffect","setValue","x","View","style","transform","translateY","panHandlers","Main","dispatch","useDispatch","itemsArr","useSelector","useState","setItems","flag","setflag","setTimeout","flex","display","alignItems","justifyContent","position","autoPlay","loop","animationData","require","flexDirection","map","changePosition","Pressable","backgroundColor","marginBottom","hovered","Text","selectable","TouchableHighlight","underlayColor","left","onPressIn","StyleSheet","store","createStore","Reducers","window","__REDUX_DEVTOOLS_EXTENSION__","App"],"mappings":"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","file":"static/js/app.e847ed9f.chunk.js","sourcesContent":["import { CHANGE_POSITION } from \"./index\";\r\n\r\nexport const State = (state = {\r\n    items: [\r\n        { name: 1 },\r\n        { name: 2 },\r\n        { name: 3 },\r\n        { name: 4 },\r\n        { name: 5 },\r\n        { name: 6 },\r\n        { name: 7 },\r\n    ]\r\n}, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_POSITION:\r\n            let newItems = [...state.items].filter((e, i) => i !== action.index);\r\n            let item = state.items[action.index];\r\n            newItems.splice(action.newIndex, 0, item);\r\n            return { ...state, items: [...newItems] };\r\n        default: return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { State } from \"./state\";\r\n\r\nexport default combineReducers({\r\n    state: State\r\n});","export const CHANGE_POSITION = \"CHANGE_POSITION\";\r\n\r\nexport const changePosition = (index, newIndex) => {\r\n    return {\r\n        type: CHANGE_POSITION,\r\n        index: index,\r\n        newIndex: newIndex\r\n    }\r\n}","import { Animated, Dimensions, PanResponder, StyleSheet, Text, View, Pressable } from 'react-native'\r\nimport React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst { width, height } = Dimensions.get(\"window\");\r\n\r\nexport default function Dragged({ index, items, renderItem, setNewIndex, height, setIndex, zIndex, indexFlag }) {\r\n    const pan = useRef(new Animated.ValueXY()).current;\r\n    const btnRef = useRef(null);\r\n    const responder = useRef(\r\n        PanResponder.create({\r\n            onMoveShouldSetPanResponder: () => true,\r\n            onPanResponderGrant: () => {\r\n                pan.setOffset({\r\n                    y: pan.y._value\r\n                });\r\n            },\r\n            onPanResponderMove: Animated.event(\r\n                [\r\n                    null,\r\n                    { dy: pan.y },\r\n                ],\r\n                {\r\n                    useNativeDriver: true\r\n                }\r\n            ),\r\n            onPanResponderRelease: (event, state) => {\r\n                let yNew = state.dy;\r\n                if (index === items.length - 1) {\r\n                    if (yNew > 0) {\r\n                        setNewIndex(index, index);\r\n                    }\r\n                    else {\r\n                        yNew = yNew - (yNew * 2);\r\n                        let move = Math.round(yNew / height);\r\n                        setNewIndex(index, index - move >= 0 ? index - move : 0)\r\n                    }\r\n                } else {\r\n                    if (yNew > 0) {\r\n                        let move = Math.round(yNew / height);\r\n                        setNewIndex(index, index + move > items.length ? index + move : items.length)\r\n                    }\r\n                    else {\r\n                        yNew = yNew - (yNew * 2);\r\n                        let move = Math.round(yNew / height);\r\n                        setNewIndex(index, index - move >= 0 ? index - move : 0)\r\n                    }\r\n                }\r\n                setIndex()\r\n            }\r\n        })\r\n    ).current;\r\n    useEffect(() => {\r\n        pan.setValue({ y: 0, x: 0 });\r\n    }, [items]);\r\n\r\n    return (\r\n        <>\r\n            {index === indexFlag ? <Animated.View\r\n                style={{\r\n                    transform: [{ translateY: index === indexFlag ? pan.y : 0 }],\r\n                    zIndex: zIndex\r\n                }}\r\n                {...responder.panHandlers}\r\n            >\r\n                <View >\r\n                    {renderItem}\r\n                </View>\r\n            </Animated.View> :\r\n                <Animated.View\r\n                    style={{\r\n                        transform: [{ translateY: index === indexFlag ? pan.y : 0 }],\r\n                        zIndex: zIndex\r\n                    }}\r\n                >\r\n                    <View >\r\n                        {renderItem}\r\n                    </View>\r\n                </Animated.View>}\r\n        </>\r\n    )\r\n}\r\n","import { Pressable, StyleSheet, Text, TouchableHighlight, TouchableOpacity, View } from 'react-native'\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport Dragged from './Drag';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changePosition } from './redux';\r\nimport Lottie from \"lottie-react\";\r\nexport default function Main() {\r\n    const dispatch = useDispatch();\r\n\r\n    const itemsArr = useSelector(state => state.state.items);\r\n    const [items, setItems] = useState(items);\r\n    const [index, setIndex] = useState();\r\n    const [flag, setflag] = useState(true)\r\n\r\n\r\n    const setNewIndex = (index, newIndex) => {\r\n        dispatch(changePosition(index, newIndex));\r\n    }\r\n\r\n    useEffect(() => {\r\n        setItems(itemsArr);\r\n    }, [itemsArr]);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => { setflag(false)}, 4000)\r\n    }, []);\r\n\r\n    return (\r\n        <View style={{flex: 1, display: \"flex\", alignItems: \"center\", justifyContent: \"center\",}}>\r\n            {!flag ? <View style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n            {items && items.map((e, i) => {\r\n                return (\r\n                    <Dragged\r\n                        items={items}\r\n                        key={i}\r\n                        index={i}\r\n                        indexFlag={index}\r\n                        height={60}\r\n                        setIndex={(i) => setIndex(i)}\r\n                        zIndex={index === i ? 5 : 4}\r\n                        setNewIndex={(index, newIndex) => setNewIndex(index, newIndex)}\r\n                        renderItem={<Pressable style={{ width: 600, height: 50, backgroundColor: `rgb(${e.name * 34}, ${e.name * 34}, ${e.name * 34})`, display: \"flex\", marginBottom: 10, alignItems: \"center\", justifyContent: \"center\" }}>\r\n                            {({ hovered }) => (\r\n                                <>\r\n                                    <Text selectable={false}>{e.name}</Text>\r\n                                    {hovered && <TouchableHighlight underlayColor={\"\"} style={{ position: \"absolute\", left: 10 }} onPressIn={(e) => { setIndex(i) }} >\r\n                                        <Text selectable={false}>{'|||'}</Text>\r\n                                    </TouchableHighlight >}\r\n                                </>\r\n                            )}\r\n                        </Pressable>\r\n                        }\r\n                    />\r\n                )\r\n            })}\r\n        </View> : <Lottie style={{position: \"absolute\"}} autoPlay loop animationData={require(\"./animation.json\")} />}\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({})","// import { StyleSheet, Text, TextInput, View } from 'react-native';\n// import React, { useState, useRef, useMemo, useEffect } from 'react';\n// export default function App() {\n//   const inputRef = useRef(null);\n\n//   const [text, setText] = useState([\n//     { text: \"\", height: 0 }\n//   ]);\n\n//   const [indexRef, setIndex] = useState(0);\n\n//   const addOrRemoveLine = (key, index) => {\n//     if (key === \"Enter\") {\n//       let newText = [...text];\n//       newText.splice(index + 1, 0, { text: \"\", height: 0 });\n//       setText(newText);\n//       setIndex(index + 1)\n//     } else if (key === \"Backspace\") {\n//       if (text[index].text.length === 0 && index > 0) {\n//         let newText = [...text];\n//         newText = newText.filter((e, i) => i != index);\n//         setText(newText);\n//         setIndex(index - 1)\n//       }\n//     }\n//     // else if (key === \"ArrowUp\") {\n//     //   if (index - 1 >= 0) {\n//     //     setIndex((i) => i - 1);\n//     //   }\n//     // } else if (key === \"ArrowDown\") {\n//     //   if (index + 1 < text.length) {\n//     //     setIndex((i) => i + 1);\n//     //   }\n//     // }\n//   }\n\n//   const addText = (txt, index) => {\n//     let newText = [...text];\n//     if (txt.indexOf(\"\\n\") >= 0) {\n//       txt = txt.replace(/\\n/g, \"\");\n//     }\n//     newText[index].text = txt;\n//     setText(newText);\n//   }\n\n//   const setHeight = (height, index) => {\n//     let newText = [...text];\n//     newText[index].height = height;\n//     setText(newText);\n//   }\n//   useEffect(() => {\n//     if (inputRef.current) {\n//       inputRef.current.focus();\n//     }\n//   }, [indexRef]);\n\n//   return (\n//     <View style={styles.container}>\n//       <View style={styles.view}>\n//         {text.map((e, i) => {\n//           return (\n//             <View key={i} style={styles.viewItem}>\n//               <Text style={{ alignSelf: \"flex-start\" }}>{'\\u2022'}</Text>\n//               {i === indexRef ? <TextInput\n//               blurOnSubmit={true}\n//                 ref={inputRef}\n//                 style={[styles.input, { height: Math.max(20, e.height) }]}\n//                 onKeyPress={({ code }) => addOrRemoveLine(code, i)}\n//                 onChangeText={(txt) => addText(txt, i)}\n//                 multiline={true}\n//                 onContentSizeChange={(event) => {\n//                   if (e.text.length > 10) {\n//                     setHeight(event.nativeEvent.contentSize.height, i)\n//                   }\n//                 }}\n//               /> : <TextInput\n//               blurOnSubmit={true}\n//                 style={[styles.input, { height: Math.max(20, e.height) }]}\n//                 onKeyPress={({ code }) => addOrRemoveLine(code, i)}\n//                 onChangeText={(txt) => addText(txt, i)}\n//                 multiline={true}\n//                 onContentSizeChange={(event) => {\n//                   if (e.text.length > 10) {\n//                     setHeight(event.nativeEvent.contentSize.height, i)\n//                   }\n//                 }}\n//               />}\n//             </View>\n//           )\n//         })}\n//       </View>\n//     </View>\n//   )\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     display: \"flex\",\n//     alignItems: \"center\",\n//     justifyContent: \"center\"\n//   },\n//   view: {\n//     width: \"50%\",\n//     height: 300,\n//     borderRadius: 20,\n//     display: \"flex\",\n//     flexDirection: \"column\",\n//     padding: 15\n//   },\n//   viewItem: {\n//     display: \"flex\",\n//     flexDirection: \"row\",\n//     alignItems: \"center\"\n//   },\n//   input: {\n//     outlineStyle: \"none\",\n//     flex: 1,\n//     textAlignVertical: \"center\",\n//     marginVertical: 2\n//   }\n// })\n\n// // import { Pressable, StyleSheet, Text, TextInput, View } from 'react-native'\n// // import React, {useState} from 'react';\n// // import TimePicker from './TimePicker';\n// // import DatePicker from './DatePicker';\n// // export default function App () {\n\n\n\n// //   return (\n// //     <View style={styles.container}>\n// //       <View style={styles.view}>\n// //        <DatePicker/>\n// //       </View>\n// //     </View>\n// //   );\n// // };\n\n\n// // const styles = StyleSheet.create({\n// //   container: {\n// //     flex: 1,\n// //     display: \"flex\",\n// //     alignItems: \"center\",\n// //     justifyContent: \"center\"\n// //   },\n// //   view: {\n// //     backgroundColor: \"#cfcfcf\",\n// //     borderRadius: 5,\n// //     padding: 20\n// //   }\n// // })\n\nimport { StyleSheet, Text, View } from 'react-native';\nimport React, {useState} from 'react';\nimport { Provider } from 'react-redux';\nimport Reducers from \"./redux/reducers\";\nimport { createStore } from 'redux';\nimport Main from './Main';\n\nconst store = createStore(Reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nexport default function App() {\n\n  \n\n  return (\n    <Provider store={store}>\n      <Main/>\n    </Provider>\n  )\n}\n\nconst styles = StyleSheet.create({})"],"sourceRoot":""}